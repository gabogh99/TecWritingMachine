
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIGUALDIFERENTErightASSIGNleftMAYORMENORMAYORIGUALMENORIGUALleftSUMARESTAleftMULTIDIVleftLPARENRPARENLPARENCRPARENCADD AND ASSIGN BEGIN CADENA COMA CONTINUEDOWN CONTINUELEFT CONTINUERIGHT CONTINUEUP DECIMAL DEF DIFERENTE DIV DOWN ENTERO EQUAL FIN GREATER ID IF IFELSE IGUAL LPAREN LPARENC MAYOR MAYORIGUAL MENOR MENORIGUAL MULT MULTI OR PARA POS POSX POSY PUNTOCOMA PUT RANDOM REPEAT RESTA RPAREN RPARENC RUN SMALLER SPEED SUBSTR SUMA UNTIL USECOLOR WHILEinit : instruccionesinstrucciones : instrucciones instruccioninstrucciones :  instruccion\n    instruccion : asignacion_instr\n                | if_instr\n                | while_instr\n    if_instr : IF expresion_logica RPAREN statement RPARENstatement : if_instr\n                    | expresion\n                    | while_instr while_instr : WHILE LPARENC expresion_logica RPARENC LPARENC statement RPARENC asignacion_instr :  PUT ID ASSIGN expresion PUNTOCOMAexpresion : ENTERO\n                    | DECIMAL\n                    | CADENA     expresion : ID expresion : LPAREN expresion RPARENexpresion_logica : expresion MENOR expresion\n                            | expresion MAYOR expresion\n                            | expresion IGUAL expresion\n                            | expresion DIFERENTE expresion\n                            | expresion MAYORIGUAL expresion\n                            | expresion MENORIGUAL expresion  expresion_logica : LPAREN expresion_logica RPAREN MENOR LPAREN expresion_logica RPAREN\n                            | LPAREN expresion_logica RPAREN MAYOR LPAREN expresion_logica RPAREN\n                            | LPAREN expresion_logica RPAREN IGUAL LPAREN expresion_logica RPAREN\n                            | LPAREN expresion_logica RPAREN DIFERENTE LPAREN expresion_logica RPAREN\n                            | LPAREN expresion_logica RPAREN MAYORIGUAL LPAREN expresion_logica RPAREN\n                            | LPAREN expresion_logica RPAREN MENORIGUAL LPAREN expresion_logica RPAREN expresion : expresion SUMA expresion\n                        | expresion RESTA expresion\n                        | expresion MULTI expresion\n                        | expresion DIV expresion\n        '
    
_lr_action_items = {'PUT':([0,2,3,4,5,6,10,54,56,77,],[7,7,-3,-4,-5,-6,-2,-12,-7,-11,]),'IF':([0,2,3,4,5,6,10,21,54,56,63,77,],[8,8,-3,-4,-5,-6,-2,8,-12,-7,8,-11,]),'WHILE':([0,2,3,4,5,6,10,21,54,56,63,77,],[9,9,-3,-4,-5,-6,-2,9,-12,-7,9,-11,]),'$end':([1,2,3,4,5,6,10,54,56,77,],[0,-1,-3,-4,-5,-6,-2,-12,-7,-11,]),'ID':([7,8,14,19,20,21,22,23,24,25,26,27,28,29,30,31,36,63,64,65,66,67,68,69,],[11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'LPAREN':([8,14,19,20,21,22,23,24,25,26,27,28,29,30,31,36,57,58,59,60,61,62,63,64,65,66,67,68,69,],[14,14,14,36,36,36,36,36,36,36,36,36,36,36,36,36,64,65,66,67,68,69,36,14,14,14,14,14,14,]),'ENTERO':([8,14,19,20,21,22,23,24,25,26,27,28,29,30,31,36,63,64,65,66,67,68,69,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'DECIMAL':([8,14,19,20,21,22,23,24,25,26,27,28,29,30,31,36,63,64,65,66,67,68,69,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'CADENA':([8,14,19,20,21,22,23,24,25,26,27,28,29,30,31,36,63,64,65,66,67,68,69,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LPARENC':([9,53,],[19,63,]),'ASSIGN':([11,],[20,]),'RPAREN':([12,15,16,17,18,32,33,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,55,56,71,72,73,74,75,76,77,78,79,80,81,82,83,],[21,-13,-14,-15,-16,51,52,56,-8,-9,-10,-18,-19,-20,-21,-22,-23,-30,-31,-32,-33,-17,52,-7,78,79,80,81,82,83,-11,-24,-25,-26,-27,-28,-29,]),'MENOR':([13,15,16,17,18,33,47,48,49,50,51,52,],[22,-13,-14,-15,-16,22,-30,-31,-32,-33,57,-17,]),'MAYOR':([13,15,16,17,18,33,47,48,49,50,51,52,],[23,-13,-14,-15,-16,23,-30,-31,-32,-33,58,-17,]),'IGUAL':([13,15,16,17,18,33,47,48,49,50,51,52,],[24,-13,-14,-15,-16,24,-30,-31,-32,-33,59,-17,]),'DIFERENTE':([13,15,16,17,18,33,47,48,49,50,51,52,],[25,-13,-14,-15,-16,25,-30,-31,-32,-33,60,-17,]),'MAYORIGUAL':([13,15,16,17,18,33,47,48,49,50,51,52,],[26,-13,-14,-15,-16,26,-30,-31,-32,-33,61,-17,]),'MENORIGUAL':([13,15,16,17,18,33,47,48,49,50,51,52,],[27,-13,-14,-15,-16,27,-30,-31,-32,-33,62,-17,]),'SUMA':([13,15,16,17,18,33,35,39,41,42,43,44,45,46,47,48,49,50,52,55,],[28,-13,-14,-15,-16,28,28,28,28,28,28,28,28,28,-30,-31,-32,-33,-17,28,]),'RESTA':([13,15,16,17,18,33,35,39,41,42,43,44,45,46,47,48,49,50,52,55,],[29,-13,-14,-15,-16,29,29,29,29,29,29,29,29,29,-30,-31,-32,-33,-17,29,]),'MULTI':([13,15,16,17,18,33,35,39,41,42,43,44,45,46,47,48,49,50,52,55,],[30,-13,-14,-15,-16,30,30,30,30,30,30,30,30,30,30,30,-32,-33,-17,30,]),'DIV':([13,15,16,17,18,33,35,39,41,42,43,44,45,46,47,48,49,50,52,55,],[31,-13,-14,-15,-16,31,31,31,31,31,31,31,31,31,31,31,-32,-33,-17,31,]),'PUNTOCOMA':([15,16,17,18,35,47,48,49,50,52,],[-13,-14,-15,-16,54,-30,-31,-32,-33,-17,]),'RPARENC':([15,16,17,18,34,38,39,40,41,42,43,44,45,46,47,48,49,50,52,56,70,77,78,79,80,81,82,83,],[-13,-14,-15,-16,53,-8,-9,-10,-18,-19,-20,-21,-22,-23,-30,-31,-32,-33,-17,-7,77,-11,-24,-25,-26,-27,-28,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,10,]),'asignacion_instr':([0,2,],[4,4,]),'if_instr':([0,2,21,63,],[5,5,38,38,]),'while_instr':([0,2,21,63,],[6,6,40,40,]),'expresion_logica':([8,14,19,64,65,66,67,68,69,],[12,32,34,71,72,73,74,75,76,]),'expresion':([8,14,19,20,21,22,23,24,25,26,27,28,29,30,31,36,63,64,65,66,67,68,69,],[13,33,13,35,39,41,42,43,44,45,46,47,48,49,50,55,39,13,13,13,13,13,13,]),'statement':([21,63,],[37,70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','aSintactico.py',19),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','aSintactico.py',23),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','aSintactico.py',28),
  ('instruccion -> asignacion_instr','instruccion',1,'p_instruccion','aSintactico.py',34),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','aSintactico.py',35),
  ('instruccion -> while_instr','instruccion',1,'p_instruccion','aSintactico.py',36),
  ('if_instr -> IF expresion_logica RPAREN statement RPAREN','if_instr',5,'p_if','aSintactico.py',42),
  ('statement -> if_instr','statement',1,'p_statement','aSintactico.py',49),
  ('statement -> expresion','statement',1,'p_statement','aSintactico.py',50),
  ('statement -> while_instr','statement',1,'p_statement','aSintactico.py',51),
  ('while_instr -> WHILE LPARENC expresion_logica RPARENC LPARENC statement RPARENC','while_instr',7,'p_while','aSintactico.py',56),
  ('asignacion_instr -> PUT ID ASSIGN expresion PUNTOCOMA','asignacion_instr',5,'p_put','aSintactico.py',61),
  ('expresion -> ENTERO','expresion',1,'p_put_tipo','aSintactico.py',65),
  ('expresion -> DECIMAL','expresion',1,'p_put_tipo','aSintactico.py',66),
  ('expresion -> CADENA','expresion',1,'p_put_tipo','aSintactico.py',67),
  ('expresion -> ID','expresion',1,'p_expresion_id','aSintactico.py',71),
  ('expresion -> LPAREN expresion RPAREN','expresion',3,'p_expresion_group','aSintactico.py',75),
  ('expresion_logica -> expresion MENOR expresion','expresion_logica',3,'p_expresion_logica','aSintactico.py',79),
  ('expresion_logica -> expresion MAYOR expresion','expresion_logica',3,'p_expresion_logica','aSintactico.py',80),
  ('expresion_logica -> expresion IGUAL expresion','expresion_logica',3,'p_expresion_logica','aSintactico.py',81),
  ('expresion_logica -> expresion DIFERENTE expresion','expresion_logica',3,'p_expresion_logica','aSintactico.py',82),
  ('expresion_logica -> expresion MAYORIGUAL expresion','expresion_logica',3,'p_expresion_logica','aSintactico.py',83),
  ('expresion_logica -> expresion MENORIGUAL expresion','expresion_logica',3,'p_expresion_logica','aSintactico.py',84),
  ('expresion_logica -> LPAREN expresion_logica RPAREN MENOR LPAREN expresion_logica RPAREN','expresion_logica',7,'p_expresion_logica_group','aSintactico.py',95),
  ('expresion_logica -> LPAREN expresion_logica RPAREN MAYOR LPAREN expresion_logica RPAREN','expresion_logica',7,'p_expresion_logica_group','aSintactico.py',96),
  ('expresion_logica -> LPAREN expresion_logica RPAREN IGUAL LPAREN expresion_logica RPAREN','expresion_logica',7,'p_expresion_logica_group','aSintactico.py',97),
  ('expresion_logica -> LPAREN expresion_logica RPAREN DIFERENTE LPAREN expresion_logica RPAREN','expresion_logica',7,'p_expresion_logica_group','aSintactico.py',98),
  ('expresion_logica -> LPAREN expresion_logica RPAREN MAYORIGUAL LPAREN expresion_logica RPAREN','expresion_logica',7,'p_expresion_logica_group','aSintactico.py',99),
  ('expresion_logica -> LPAREN expresion_logica RPAREN MENORIGUAL LPAREN expresion_logica RPAREN','expresion_logica',7,'p_expresion_logica_group','aSintactico.py',100),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_operaciones','aSintactico.py',110),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_operaciones','aSintactico.py',111),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_expresion_operaciones','aSintactico.py',112),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_operaciones','aSintactico.py',113),
]
